ts_lyrics <- readRDS(here("data","ts_lyrics.RDS"))
sales <- readRDS(here("data","sales.RDS"))
library(here)
if(!file.exists(here("data","b_lyrics.RDS"))){
b_lyrics <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-29/beyonce_lyrics.csv')
ts_lyrics <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-29/taylor_swift_lyrics.csv')
sales <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-29/sales.csv')
# save the files to RDS objects
saveRDS(b_lyrics, file = here("data","b_lyrics.RDS"))
saveRDS(ts_lyrics, file = here("data","ts_lyrics.RDS"))
saveRDS(sales, file = here("data","sales.RDS"))
b_lyrics <- readRDS(here("data","b_lyrics.RDS"))
ts_lyrics <- readRDS(here("data","ts_lyrics.RDS"))
sales <- readRDS(here("data","sales.RDS"))
sales <- readRDS(here("data","sales.RDS"))
sales <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-29/sales.csv')
View(sales)
sales_1 <- sales %>%
mutate(released = str_remove(released, "\\(.*"))
View(sales_1)
x<- mdy(sales_1$released)
sales_1 <- sales_1 %>%
mutate(released = x)
sales_2 <- sales_1 %>%
mutate(country = fct_collapse(sales_1$country, "FR"= c("FRA", "FR"), "World"= c("WW", "World"))) %>%
group_by(country) %>%
filter(country %in% c("US", "UK", "World"))
View(sales_2)
sales_2[c("sales")] <- sales_2[c("sales")]/1e6
ts_lyrics_wtoken <-
ts_lyrics %>%
unnest_tokens(output = word,
input = Lyrics,
token = "words") %>%
mutate(linenumber = row_number()) %>%
anti_join(stop_words) %>%
count(word, Album, sort = TRUE) %>%
inner_join(get_sentiments("afinn")) %>%
group_by(Album) %>%
summarise(mean= mean(value)) %>%
inner_join(sales_2)
View(ts_lyrics_wtoken)
ts_lyrics_wtoken
ts_lyrics_wtoken <-
ts_lyrics %>%
unnest_tokens(output = word,
input = Lyrics,
token = "words") %>%
mutate(linenumber = row_number()) %>%
anti_join(stop_words) %>%
count(word, Album, sort = TRUE) %>%
inner_join(get_sentiments("afinn")) %>%
group_by(Album) %>%
summarise(mean= mean(value)) %>%
inner_join(sales_2, by= Album)
ts_lyrics_wtoken <-
ts_lyrics %>%
unnest_tokens(output = word,
input = Lyrics,
token = "words") %>%
mutate(linenumber = row_number()) %>%
anti_join(stop_words) %>%
count(word, Album, sort = TRUE) %>%
inner_join(get_sentiments("afinn")) %>%
group_by(Album) %>%
summarise(mean= mean(value)) %>%
ts_lyrics_wtoken
ts_lyrics_wtoken <-
ts_lyrics %>%
unnest_tokens(output = word,
input = Lyrics,
token = "words") %>%
mutate(linenumber = row_number()) %>%
anti_join(stop_words) %>%
count(word, Album, sort = TRUE) %>%
inner_join(get_sentiments("afinn")) %>%
group_by(Album) %>%
summarise(mean= mean(value))
ts_lyrics_wtoken
ts_plot<- inner_join(x= sales_2,y= ts_lyrics_wtoken, by= "Album")
ts_plot<- inner_join(x= sales_2,y= ts_lyrics_wtoken, by= Album)
ts_plot<- inner_join(x= sales_2,y= ts_lyrics_wtoken, by= c("Album")
)
rlang::last_error()
ts_plot<- inner_join(x= sales_2,y= ts_lyrics_wtoken, by= c("Album"))
ts_plot<- inner_join(x= sales_2,y= ts_lyrics_wtoken)
ts_plot<- inner_join(x= sales_2,y= ts_lyrics_wtoken, by= "title")
sales_2 <- sale_2 %>% rename_at("title", ~"Album")
View(sales_2)
sales_2 <- sale_2 %>% rename_at("title", ~"Album")
sale_2 %>% rename_at("title", ~"Album")
sale_2 %>% rename_at("title", ~"Album")
sale_2
View(sales_2)
sales_2 <- sales_2 %>% rename_at("title", ~"Album")
sales_2 <- sales_2 %>% rename_at("title", ~"Album")
ts_plot<- inner_join(x= sales_2,y= ts_lyrics_wtoken, by= "Album")
View(ts_plot)
ts_plot %>%
ggplot(aes(x = released, y = mean, fill= sales)) +
geom_col(show.legend = TRUE) +
labs(y= "Top words", x= "Frequency of words")
ts_plot %>%
ggplot(aes(x = released, y = mean, fill= sales)) +
geom_point() +
geom_col(show.legend = TRUE) +
labs(y= "Top words", x= "Frequency of words")
ts_plot %>%
ggplot(aes(x = released, y = mean )) +
geom_point() +
geom_col(show.legend = TRUE) +
labs(y= "Top words", x= "Frequency of words")
ts_plot %>%
ggplot(aes(x = released, y = mean )) + geom_point() +
geom_col(show.legend = TRUE) +
labs(y= "Top words", x= "Frequency of words")
ts_plot %>%
ggplot(aes(x = released, y = mean )) + geom_point() +
labs(y= "Top words", x= "Frequency of words")
ts_plot %>%
ggplot(aes(x = released, y = mean )) +
geom_point() +
labs(x= "Release date", y= "Average score")
ts_plot %>%
ggplot(aes(x = released, y = mean )) +
geom_point(aes(size= sales)) +
labs(x= "Release date", y= "Average score")
ts_plot %>%
ggplot(aes(x = released, y = mean, color= cyl )) +
geom_point(aes(size= sales)) +
labs(x= "Release date", y= "Average score")
ts_plot %>%
ggplot(aes(x = released, y = mean, color= pal )) +
geom_point(aes(size= sales)) +
labs(x= "Release date", y= "Average score")
ts_plot %>%
ggplot(aes(x = released, y = mean )) +
geom_point(aes(size= sales)) +
labs(x= "Release date", y= "Average score")
ts_plot %>%
ggplot(aes(x = released, y = mean, color= sales )) +
geom_point(aes(size= sales)) +
labs(x= "Release date", y= "Average score")
ts_plot %>%
ggplot(aes(x = released, y = mean)) +
geom_point(aes(size= sales)) +
labs(x= "Release date", y= "Average score") +
geom_abline()
ts_plot %>%
ggplot(aes(x = released, y = mean)) +
geom_point(aes(size= sales)) +
labs(x= "Release date", y= "Average score") +
geom_abline() +
geom_smooth(method-lm)
ts_plot %>%
ggplot(aes(x = released, y = mean)) +
geom_point(aes(size= sales)) +
labs(x= "Release date", y= "Average score") +
geom_abline() +
geom_smooth(method=lm)
ts_plot %>%
ggplot(aes(x = released, y = mean)) +
geom_point(aes(size= sales)) +
labs(x= "Release date", y= "Average score") +
geom_hline(yintercept = 0)
ts_plot %>%
ggplot(aes(x = released, y = mean)) +
geom_point(aes(size= sales)) +
labs(title= Sentiments of Taylor Swifts songs over the years ,x= "Release date", y= "Average score") +
ts_plot %>%
ggplot(aes(x = released, y = mean)) +
geom_point(aes(size= sales, color= pal)) +
labs(title= "Sentiments of Taylor Swift's songs over the years" ,x= "Release date", y= "Average score") +
geom_hline(yintercept = 0)
ts_plot %>%
ggplot(aes(x = released, y = mean)) +
geom_point(aes(size= sales)) +
labs(title= "Sentiments of Taylor Swift's songs over the years" ,x= "Release date", y= "Average score") +
geom_hline(yintercept = 0)
ts_plot %>%
ggplot(aes(x = released, y = mean)) +
geom_point(aes(size= sales)) +
labs(title= "Sentiments of Taylor Swift's songs over the years" ,subtitle= "Above plot shows average sentiment score in albums of Taylor Swift. We can see that average score is decreasing over the years and thus her songs are getting negative." ,x= "Release date", y= "Average score") +
geom_hline(yintercept = 0)
ts_plot %>%
ggplot(aes(x = released, y = mean)) +
geom_point(aes(size= sales)) +
labs(title= "Sentiments of Taylor Swift's songs over the years" ,subtitle= "Analysis of taylor songs by Shubham" ,x= "Release date", y= "Average score") +
geom_hline(yintercept = 0)
ts_plot %>%
ggplot(aes(x = released, y = mean)) +
geom_point(aes(size= sales)) +
labs(title= "Sentiments of Taylor Swift's songs over the years" ,subtitle= "Analysis of taylor songs by Shubham" ,x= "Release date", y= "Average score") +
geom_hline(yintercept = 0) +
theme_bw(base_family = "Times")
ts_plot %>%
ggplot(aes(x = released, y = mean)) +
geom_point(aes(size= sales, color= sales)) +
labs(title= "Sentiments of Taylor Swift's songs over the years" ,subtitle= "Analysis of taylor songs by Shubham" ,x= "Release date", y= "Average score") +
geom_hline(yintercept = 0)
ts_plot %>%
ggplot(aes(x = released, y = mean)) +
geom_point(aes(size= sales, color= sales)) +
labs(title= "Sentiments of Taylor Swift's songs over the years" ,subtitle= "Analysis of taylor songs by Shubham" ,x= "Release date", y= "Average score") +
geom_hline(yintercept = 0) +
theme_minimal()
ts_plot %>%
ggplot(aes(x = released, y = mean, backgroundColor= "white")) +
geom_point(aes(size= sales, color= sales)) +
labs(title= "Sentiments of Taylor Swift's songs over the years" ,subtitle= "Analysis of taylor songs by Shubham" ,x= "Release date", y= "Average score") +
geom_hline(yintercept = 0) +
theme_minimal()
ts_plot %>%
ggplot(aes(x = released, y = mean, backgroundColor= "pink")) +
geom_point(aes(size= sales, color= sales)) +
labs(title= "Sentiments of Taylor Swift's songs over the years" ,subtitle= "Analysis of taylor songs by Shubham" ,x= "Release date", y= "Average score") +
geom_hline(yintercept = 0) +
theme_minimal()
ts_plot %>%
ggplot(aes(x = released, y = mean, color= sales)) +
geom_point(aes(size= sales)) +
labs(title= "Sentiments of Taylor Swift's songs over the years" ,subtitle= "Analysis of taylor songs by Shubham" ,x= "Release date", y= "Average score") +
geom_hline(yintercept = 0) +
theme_minimal()
ts_plot %>%
ggplot(aes(x = released, y = mean, color= Album)) +
geom_point(aes(size= sales)) +
labs(title= "Sentiments of Taylor Swift's songs over the years" ,subtitle= "Analysis of taylor songs by Shubham" ,x= "Release date", y= "Average score") +
geom_hline(yintercept = 0) +
theme_minimal()
ts_plot %>%
ggplot(aes(x = released, y = mean, color= Album)) +
geom_point(aes(size= sales)) +
labs(title= "Sentiments of Taylor Swift's songs over the years" ,subtitle= "Analysis of taylor songs by Shubham" ,x= "Release date", y= "Average score") +
geom_hline(yintercept = 0) +
scale_color_brewer(palette = "pal")
ts_plot %>%
ggplot(aes(x = released, y = mean, color= Album)) +
geom_point(aes(size= sales)) +
labs(title= "Sentiments of Taylor Swift's songs over the years" ,subtitle= "Analysis of taylor songs by Shubham" ,x= "Release date", y= "Average score") +
geom_hline(yintercept = 0) +
scale_color_brewer(palette = "Accent")
ts_plot %>%
ggplot(aes(x = released, y = mean, color= Album)) +
geom_point(aes(size= sales)) +
labs(title= "Sentiments of Taylor Swift's songs over the years" ,subtitle= "Analysis of taylor songs by Shubham" ,x= "Release date", y= "Average score") +
geom_hline(yintercept = 0)
sales_2 <- sales_2 %>% group_by(country) %>%
filter(country %in% c("US"))
release_date <- sales_2$released
today <- ymd(20221013)
interval(release_date, today)
years_since_release <- interval(release_date, today) %>%
as.numeric('years') %>%
round(digits = 0)
sales_2<- sales_2 %>%
mutate(years_since_release) %>%
summarise(years_since_release, median = median(years_since_release), oldest = max(years_since_release), newest= min(years_since_release))
View(sales_2)
sales_2 <- sales_2 %>% group_by(country) %>%
filter(country %in% c("US"))
release_date <- sales_2$released
today <- ymd(20221013)
interval(release_date, today)
years_since_release <- interval(release_date, today) %>%
as.numeric('years') %>%
round(digits = 0)
sales_3 <- sales_2 %>% mutate(years_since_release)
sales_3 %>%
summarise(years_since_release, median = median(years_since_release), oldest = max(years_since_release), newest= min(years_since_release))
sales_1 <- sales %>%
mutate(released = str_remove(released, "\\(.*"))
x<- mdy(sales_1$released)
sales_1 <- sales_1 %>%
mutate(released = x)
sales_2 <- sales_1 %>%
mutate(country = fct_collapse(sales_1$country, "FR"= c("FRA", "FR"), "World"= c("WW", "World"))) %>%
group_by(country) %>%
filter(country %in% c("US", "UK", "World"))
sales_2[c("sales")] <- sales_2[c("sales")]/1e6
sale_2
View(sales)
View(sales_1)
sales_1 <- sales %>%
mutate(released = str_remove(released, "\\(.*"))
x<- mdy(sales_1$released)
sales_1 <- sales_1 %>%
mutate(released = x)
sales_2 <- sales_1 %>%
mutate(country = fct_collapse(sales_1$country, "FR"= c("FRA", "FR"), "World"= c("WW", "World"))) %>%
group_by(country) %>%
filter(country %in% c("US", "UK", "World"))
sales_2[c("sales")] <- sales_2[c("sales")]/1e6
sales_2
sales_2 <- sales_2 %>% group_by(country) %>%
filter(country %in% c("US"))
release_date <- sales_2$released
today <- ymd(20221013)
interval(release_date, today)
years_since_release <- interval(release_date, today) %>%
as.numeric('years') %>%
round(digits = 0)
sales_3 <- sales_2 %>% mutate(years_since_release)
sales_3 %>%
summarise(years_since_release, median = median(years_since_release), oldest = max(years_since_release), newest= min(years_since_release))
View(sales_3)
library(dplyr)
graph_data <- sales_2 %>%
group_by(artist, country) %>%
summarise(TotalSales=sum(sales))
library(ggplot2)
graph_data %>% ggplot(aes(fill=country ,y=TotalSales, x=artist)) +
geom_bar(position="fill", stat="identity")
View(graph_data)
sales_1 <- sales %>%
mutate(released = str_remove(released, "\\(.*"))
x<- mdy(sales_1$released)
sales_1 <- sales_1 %>%
mutate(released = x)
sales_2 <- sales_1 %>%
mutate(country = fct_collapse(sales_1$country, "FR"= c("FRA", "FR"), "World"= c("WW", "World"))) %>%
group_by(country) %>%
filter(country %in% c("US", "UK", "World"))
sales_2[c("sales")] <- sales_2[c("sales")]/1e6
sales_2
sales_3 <- sales_2 %>% group_by(country) %>%
filter(country %in% c("US"))
release_date <- sales_3$released
today <- ymd(20221013)
interval(release_date, today)
years_since_release <- interval(release_date, today) %>%
as.numeric('years') %>%
round(digits = 0)
sales_4 <- sales_3 %>% mutate(years_since_release)
sales_4 %>%
summarise(years_since_release, median = median(years_since_release), oldest = max(years_since_release), newest= min(years_since_release))
library(dplyr)
graph_data <- sales_2 %>%
group_by(artist, country) %>%
summarise(TotalSales=sum(sales))
library(ggplot2)
graph_data %>% ggplot(aes(fill= country ,y= TotalSales, x= artist)) +
geom_bar(position="fill", stat="identity")
library(dplyr)
graph_data <- sales_2 %>%
group_by(artist, country) %>%
summarise(TotalSales=sum(sales))
library(ggplot2)
graph_data %>%
ggplot(aes(fill= country ,y= TotalSales, x= artist)) +
geom_bar(position="fill", stat="identity") +
labs(x= Artist, y= Total sales over the years)
library(dplyr)
graph_data <- sales_2 %>%
group_by(artist, country) %>%
summarise(TotalSales=sum(sales))
library(ggplot2)
graph_data %>%
ggplot(aes(fill= country ,y= TotalSales, x= artist)) +
geom_bar(position="fill", stat="identity") +
labs(x= "Artist", y= "Total sales over the years")
library(dplyr)
graph_data <- sales_2 %>%
group_by(artist, country) %>%
summarise(TotalSales=sum(sales))
library(ggplot2)
graph_data %>%
ggplot(aes(fill= country ,y= TotalSales, x= artist)) +
geom_bar(position="fill", stat="identity") +
labs(x= "Artist", y= "Total sales over the years in millions")
library(dplyr)
graph_data <- sales_2 %>%
group_by(artist, country) %>%
summarise(TotalSales=sum(sales))
library(ggplot2)
graph_data %>%
ggplot(aes(fill= country ,y= TotalSales, x= artist)) +
geom_bar(position="fill", stat="identity") +
labs(x= "Artist", y= "Percentage of sales of studio albums (in millions)")
library(dplyr)
graph_data <- sales_2 %>%
group_by(artist, country) %>%
summarise(TotalSales=sum(sales))
library(ggplot2)
graph_data %>%
ggplot(aes(fill= country ,y= TotalSales, x= artist)) +
geom_bar(position="fill", stat="identity") +
labs(title = "Percent stacked barchart" x= "Artist", y= "Percentage of sales of studio albums (in millions)")
library(dplyr)
graph_data <- sales_2 %>%
group_by(artist, country) %>%
summarise(TotalSales=sum(sales))
library(ggplot2)
graph_data %>%
ggplot(aes(fill= country ,y= TotalSales, x= artist)) +
geom_bar(position="fill", stat="identity") +
labs(title = "Percent stacked barchart" x= "Artist", y= "Percentage of sales of studio albums (in millions)")
library(dplyr)
graph_data <- sales_2 %>%
group_by(artist, country) %>%
summarise(TotalSales=sum(sales))
library(ggplot2)
graph_data %>%
ggplot(aes(fill= country ,y= TotalSales, x= artist)) +
geom_bar(position="fill", stat="identity") +
labs(title = "Percent stacked barchart", x= "Artist", y= "Percentage of sales of studio albums (in millions)")
sales_5 <- sales_2 %>%
filter(country== 'World')
ggplot(sales5, aes(x= sales, y=fct_reorder(.f = title, .x =sales)))+
geom_bar(stat = "identity", fill = rainbow(n=length(sales_5$sales)))
sales_5 <- sales_2 %>%
filter(country== 'World')
ggplot(sales_5, aes(x= sales, y=fct_reorder(.f = title, .x =sales)))+
geom_bar(stat = "identity", fill = rainbow(n=length(sales_5$sales)))
sales_5 <- sales_2 %>%
filter(country== 'World')
ggplot(sales_5, aes(x= sales, y=fct_reorder(.f = title, .x =sales)))+
geom_bar(stat = "identity", fill = grey(n=length(sales_5$sales)))
ggplot(sales_5, aes(x= sales, y=fct_reorder(.f = title, .x =sales)))+
geom_bar(stat = "identity",) +
scale_fill_brewer()
ggplot(sales_5, aes(x= sales, y=fct_reorder(.f = title, .x =sales)))+
geom_bar(stat = "identity",) +
scale_fill_continuous()
sales_5 <- sales_2 %>%
filter(country== 'World')
ggplot(sales_5, aes(x= sales, y=fct_reorder(.f = title, .x =sales)))+
geom_bar(stat = "identity",) +
scale_fill_manual(values=c("#9933FF",
"#33FFFF",
"red",
"darkblue"))
sales_5 <- sales_2 %>%
filter(country== 'World')
ggplot(sales_5, aes(x= sales, y=fct_reorder(.f = title, .x =sales)))+
geom_bar(stat = "identity",) +
sales_5 <- sales_2 %>%
filter(country== 'World')
ggplot(sales_5, aes(x= sales, y=fct_reorder(.f = title, .x =sales)))+
geom_bar(stat = "identity",)
sales_5 <- sales_2 %>%
filter(country== 'World')
ggplot(sales_5, aes(x= sales, y=fct_reorder(.f = title, .x =sales)))+
geom_bar(stat = "identity", fill(sales))
sales_5 <- sales_2 %>%
filter(country== 'World')
ggplot(sales_5, aes(x= sales, y=fct_reorder(.f = title, .x =sales)))+
geom_bar(stat = "identity", fill= sales)
sales_5 <- sales_2 %>%
filter(country== 'World')
ggplot(sales_5, aes(x= sales, y=fct_reorder(.f = title, .x =sales)))+
geom_bar(stat = "identity", fill= "sales")
sales_5 <- sales_2 %>%
filter(country== 'World')
ggplot(sales_5, aes(x= sales, y=fct_reorder(.f = title, .x =sales)))+
geom_bar(stat = "identity", fill= "sales_5$sales")
sales_5 <- sales_2 %>%
filter(country== 'World')
ggplot(sales_5, aes(x= sales, y=fct_reorder(.f = title, .x =sales)))+
geom_bar(stat = "identity", fill= "grey")
sales_5 <- sales_2 %>%
filter(country== 'World')
ggplot(sales_5, aes(x= sales, y=fct_reorder(.f = title, .x =sales)))+
geom_bar(stat = "identity", fill= "rainbow")
sales_5 <- sales_2 %>%
filter(country== 'World')
ggplot(sales_5, aes(x= sales, y=fct_reorder(.f = title, .x =sales)))+
geom_bar(stat = "identity", fill= "blue")
sales_5 <- sales_2 %>%
filter(country== 'World')
ggplot(sales_5, aes(x= sales, y=fct_reorder(.f = title, .x =sales, fill = artist)))+
geom_bar(stat = "identity", fill= "blue") +
labs(title = "Sales of studio albums", x= "Sales")
sales_5 <- sales_2 %>%
filter(country== 'World')
ggplot(sales_5, aes(x= sales, y=fct_reorder(.f = title, .x =sales)))+
geom_bar(stat = "identity", fill= "blue") +
labs(title = "Sales of studio albums", x= "Sales", y= "Album titles")
sales_5 <- sales_2 %>%
filter(country== 'World')
ggplot(sales_5, aes(x= sales, y=fct_reorder(.f = title, .x =sales)))+
geom_bar(stat = "identity") +
labs(title = "Sales of studio albums", x= "Sales", y= "Album titles")
sales_5 <- sales_2 %>%
filter(country== 'World')
sales_5 %>%
ggplot(aes(x= sales, y=fct_reorder(.f = title, .x =sales)))+
geom_bar(stat = "identity") +
labs(title = "Sales of studio albums", x= "Sales", y= "Album titles")
View(ts_lyrics_wtoken)
View(ts_lyrics_wtoken)
View(ts_lyrics_token)
View(ts_lyrics_wtoken)
View(sales_5)
sales_5 <- sales_2 %>%
filter(country== 'World')
sales_5 %>%
ggplot(aes(x= sales, y=fct_reorder(.f = title, .x =sales), fill= artist ))+
geom_bar(stat = "identity") +
labs(title = "Sales of studio albums", x= "Sales", y= "Album titles")
scat_sale <- ggplot(sales_2, aes(x=released, y=sales, col=artist)) +
geom_point()
g + facet_grid(. ~ country)
scat_sale <- ggplot(sales_2, aes(x=released, y=sales, col=artist)) +
geom_point()
scat_sale + facet_grid(. ~ country)
View(sales_2)
scat_sale <- ggplot(sales_2, aes(x=released, y=sales, col=artist)) +
geom_point()
scat_sale +
facet_grid(. ~ country) +
labs(title = "Scatter plot across countries", x= "years", y= "sales of studio albums (in millions)")
